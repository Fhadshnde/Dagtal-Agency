{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dagtal-Agenced/my-app/src/app/blog/%5Bid%5D/page.jsx"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport styles from \"./page.module.css\";\r\nimport Image from \"next/image\";\r\nimport { notFound } from \"next/navigation\";\r\n\r\nasync function getData(id) {\r\n  const res = await fetch(`http://localhost:3000/api/posts/${id}`, {\r\n    cache: \"no-store\",\r\n  });\r\n\r\n  if (!res.ok) {\r\n    return notFound()\r\n  }\r\n\r\n  return res.json();\r\n}\r\n\r\n\r\nexport async function generateMetadata({ params }) {\r\n\r\n  const post = await getData(params.id)\r\n  return {\r\n    title: post.title,\r\n    description: post.desc,\r\n  };\r\n}\r\n\r\nconst BlogPost = async ({ params }) => {\r\n  const data = await getData(params.id);\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.top}>\r\n        <div className={styles.info}>\r\n          <h1 className={styles.title}>{data.title}</h1>\r\n          <p className={styles.desc}>\r\n            {data.desc}\r\n          </p>\r\n          <div className={styles.author}>\r\n            <Image\r\n              src={data.img}\r\n              alt=\"\"\r\n              width={40}\r\n              height={40}\r\n              className={styles.avatar}\r\n            />\r\n            <span className={styles.username}>{data.username}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.imageContainer}>\r\n          <Image\r\n            src={data.img}\r\n            alt=\"\"\r\n            fill={true}\r\n            className={styles.image}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.content}>\r\n        <p className={styles.text}>\r\n         {data.content}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;AAEA;AACA;AAAA;;;;;;AAEA,eAAe,QAAQ,EAAE;IACvB,MAAM,MAAM,MAAM,MAAM,CAAC,gCAAgC,EAAE,IAAI,EAAE;QAC/D,OAAO;IACT;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAChB;IAEA,OAAO,IAAI,IAAI;AACjB;AAGO,eAAe,iBAAiB,EAAE,MAAM,EAAE;IAE/C,MAAM,OAAO,MAAM,QAAQ,OAAO,EAAE;IACpC,OAAO;QACL,OAAO,KAAK,KAAK;QACjB,aAAa,KAAK,IAAI;IACxB;AACF;AAEA,MAAM,WAAW,OAAO,EAAE,MAAM,EAAE;IAChC,MAAM,OAAO,MAAM,QAAQ,OAAO,EAAE;IACpC,qBACE,8OAAC;QAAI,WAAW,OAAO,SAAS;;0BAC9B,8OAAC;gBAAI,WAAW,OAAO,GAAG;;kCACxB,8OAAC;wBAAI,WAAW,OAAO,IAAI;;0CACzB,8OAAC;gCAAG,WAAW,OAAO,KAAK;0CAAG,KAAK,KAAK;;;;;;0CACxC,8OAAC;gCAAE,WAAW,OAAO,IAAI;0CACtB,KAAK,IAAI;;;;;;0CAEZ,8OAAC;gCAAI,WAAW,OAAO,MAAM;;kDAC3B,8OAAC,6HAAA,CAAA,UAAK;wCACJ,KAAK,KAAK,GAAG;wCACb,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAW,OAAO,MAAM;;;;;;kDAE1B,8OAAC;wCAAK,WAAW,OAAO,QAAQ;kDAAG,KAAK,QAAQ;;;;;;;;;;;;;;;;;;kCAGpD,8OAAC;wBAAI,WAAW,OAAO,cAAc;kCACnC,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,KAAK,GAAG;4BACb,KAAI;4BACJ,MAAM;4BACN,WAAW,OAAO,KAAK;;;;;;;;;;;;;;;;;0BAI7B,8OAAC;gBAAI,WAAW,OAAO,OAAO;0BAC5B,cAAA,8OAAC;oBAAE,WAAW,OAAO,IAAI;8BACvB,KAAK,OAAO;;;;;;;;;;;;;;;;;AAKtB;uCAEe"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}