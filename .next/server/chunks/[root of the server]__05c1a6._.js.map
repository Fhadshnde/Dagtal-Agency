{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dagtal-Agenced/my-app/src/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema(\n  {\n    name: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    email: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n  },\n  { timestamps: true }\n);\n\n//If the User collection does not exist create a new one.\nexport default mongoose.models.User || mongoose.model(\"User\", userSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,EAAE,MAAM,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAE3B,MAAM,aAAa,IAAI,OACrB;IACE,MAAM;QACJ,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,QAAQ;QACR,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;AACF,GACA;IAAE,YAAY;AAAK;uCAIN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Dagtal-Agenced/my-app/src/app/api/auth/register/route.js"],"sourcesContent":["import User from \"@/models/User\";\nimport connect from \"@/utils/db\";\nimport bcrypt from \"bcryptjs\";\nimport { NextResponse } from \"next/server\";\n\nexport const POST = async (request) => {\n  try {\n    const { name, email, password } = await request.json();\n    await connect();\n\n    // التحقق من أن البيانات المدخلة تصل إلى هنا\n    console.log({ name, email, password });\n\n    const hashedPassword = await bcrypt.hash(password, 5);\n\n    const newUser = new User({\n      name,\n      email,\n      password: hashedPassword,\n    });\n\n    await newUser.save();\n    return new NextResponse(\"User has been created\", {\n      status: 201,\n    });\n  } catch (err) {\n    console.error(\"Error creating user:\", err);\n    return new NextResponse(err.message, {\n      status: 500,\n    });\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;AAGA;;;;;AAEO,MAAM,OAAO,OAAO;IACzB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QACpD,MAAM;QAEN,4CAA4C;QAC5C,QAAQ,GAAG,CAAC;YAAE;YAAM;YAAO;QAAS;QAEpC,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,UAAU;QAEnD,MAAM,UAAU,IAAI,uHAAA,CAAA,UAAI,CAAC;YACvB;YACA;YACA,UAAU;QACZ;QAEA,MAAM,QAAQ,IAAI;QAClB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,yBAAyB;YAC/C,QAAQ;QACV;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,IAAI,OAAO,EAAE;YACnC,QAAQ;QACV;IACF;AACF"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}